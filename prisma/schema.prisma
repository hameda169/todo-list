generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  ToDos         ToDo[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ToDo {
  id          String          @id @default(cuid())
  name        String
  userId      String
  user        User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime
  updatedAt   DateTime
  completedAt DateTime?
  dueDate     DateTime?
  labels      LabelsOnToDos[]
}

model Label {
  id    String          @id @default(cuid())
  text  String
  color String
  toDos LabelsOnToDos[]
}

model LabelsOnToDos {
  labelId String
  label   Label  @relation(fields: [labelId], references: [id], onDelete: Cascade)
  toDoId  String
  toDo    ToDo   @relation(fields: [toDoId], references: [id], onDelete: Cascade)

  @@id([labelId, toDoId])
}
